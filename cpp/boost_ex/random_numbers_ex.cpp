/*
 * random_numbers_ex.cpp
 *
 *  Created on: Oct 17, 2019
 *      Author: akadar
 */

#include <iostream>
#include <boost/random.hpp>

using namespace boost::random;
//using namespace std;

class boost_rand{
public:
	// random number generator engine which produces a sequence of random values
	using RNG_mt19937 = mt19937;

	boost_rand(){
		seed = static_cast<unsigned>(std::time(0));
		rng_engine = RNG_mt19937(seed);
	}
	boost_rand(unsigned seed_){
		seed = seed_;
		rng_engine = RNG_mt19937(seed_);
	}
protected:
	unsigned seed;
	RNG_mt19937 rng_engine;
};

class boost_real: public boost_rand{
public:
	// uniform real distribution which maps the random values generated by rng into a
	// mathematical distribution in a range
	using uniform_real_dist = uniform_real_distribution<double>;
	//using variate_generator_real = variate_generator<RNG_mt19937&, uniform_real_dist>;

	boost_real(double min_, double max_):
		boost_rand(), min{min_}, max{max_}{

			dists = uniform_real_dist(min_,max_);
	}

	boost_real(unsigned seed_, double min_, double max_):
		boost_rand(seed_), min{min_}, max{max_}{

			dists = uniform_real_dist(min_,max_);
	}

	double operator()(){
		//variate_generator_real vargen(rng_engine,dists);
		//return vargen();
		return dists(rng_engine);
	}
private:
	double min;
	double max;
	uniform_real_dist dists;
};

class boost_int: public boost_rand{
public:
	using uniform_int_dist = uniform_int_distribution<int>;
	//using variate_generator_int = variate_generator<RNG_mt19937&, uniform_int_dist>;

	boost_int(int min_, int max_):
		boost_rand(), min{min_}, max{max_}{

			dists = uniform_int_dist(min_,max_);
	}

	boost_int(unsigned seed_, int min_, int max_):
		boost_rand(seed_), min{min_}, max{max_}{

			dists = uniform_int_dist(min_,max_);
	}

	int operator()(){
		//variate_generator_int vargen(rng_engine,dists);
		//return vargen();
		return dists(rng_engine);
	}
private:
	int min;
	int max;
	uniform_int_dist dists;
};

int main(){

	boost_real obj1(0,0,1);
	boost_int obj2(0,-150, -100);

	std::cout<<obj1()<<" "<<obj2();

	return 0;
}
